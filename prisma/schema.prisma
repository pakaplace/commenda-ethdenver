// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  // Next-auth fields & user metadata: 
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // Stuff owned by the user:
  safeNotes     SafeNote[]
  // Docusign Integration:
  docusignAccessToken String? 
  docusignAccessTokenExpires DateTime?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SafeNote {
  id Int @id @default(autoincrement())	
  // Company metadata: 
  companyName String
  dateOfIncorporation DateTime @db.Date
  stateOfIncorporation String // Assume US state for now.
  companyAddress String
  companyRepresentativeName String
  companyRepresentativeTitle String
  companyRepresentativeEmail String

  // Investor metadata: 
  investorAddress String
  investorName String
  investorTitle String
  investorEmail String

  // Investment data:
  purchaseAmount Decimal @db.Money	
  purchaseDate DateTime @db.Date
  // Optional investment fields, SAFE notes may or may not have these:
  valuationCap Decimal? @db.Money	
  discountRate Decimal? 
  mfnClause Boolean // Whether a MFN clause should be included in the SAFE note 

  // Owner:
  userId             String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}